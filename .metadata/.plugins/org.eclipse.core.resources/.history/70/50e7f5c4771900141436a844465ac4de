package com.songbase.fm.androidapp.misc;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.FileOutputStream;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;

import org.apache.commons.io.IOUtils;

import android.util.Log;

public class HttpController {

	public static HttpController instance = new HttpController();;

	private final String USER_AGENT = "Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36";

	// HTTP GET request
	public String sendGet(String url,String host,String referer)  {
		HttpURLConnection connection = null;
		String html = "";
		try {

			URL obj = new URL(url);
			connection = (HttpURLConnection) obj.openConnection();
			connection.setConnectTimeout(30000); //set timeout to 30 seconds
			// optional default is GET
			connection.setRequestMethod("GET");
			connection.setRequestProperty("Accept","*/*");
			connection.setRequestProperty("Cache-Control", "no-cache");
			connection.setRequestProperty("Connection", "keep-alive");
			connection.setRequestProperty("Host", host);
			connection.setRequestProperty("Pragma", "no-cache");
			connection.setRequestProperty("Referer", referer);
			connection.setRequestProperty("User-Agent", USER_AGENT);

			/*
			 int responseCode = connection.getResponseCode();
			 System.out.println("\nSending 'GET' request to URL : " + url);
			 System.out.println("Response Code : " + responseCode);
			 System.out.println("Response Len : " +
			 connection.getContentLength());
             */
			
			html = IOUtils.toString(connection.getInputStream(), "UTF-8");

		} catch (Exception ex) {
			Log.e("","ERROR IN GET REQUEST");
			

		} finally {

			if (connection != null) {
				connection.disconnect();
			}
		}

		return html;
	}
	
	
	// HTTP GET request
		public String sendGetBinary(String url,String host,String referer)  {
			HttpURLConnection connection = null;
			String html = "";
			try {

				URL obj = new URL(url);
				connection = (HttpURLConnection) obj.openConnection();
				connection.setConnectTimeout(30000); //set timeout to 30 seconds
				// optional default is GET
				connection.setRequestMethod("GET");
				connection.setRequestProperty("Accept","*/*");
				connection.setRequestProperty("Cache-Control", "no-cache");
				connection.setRequestProperty("Connection", "keep-alive");
				connection.setRequestProperty("Host", host);
				connection.setRequestProperty("Pragma", "no-cache");
				connection.setRequestProperty("Referer", referer);
				connection.setRequestProperty("User-Agent", USER_AGENT);

				/*
				 int responseCode = connection.getResponseCode();
				 System.out.println("\nSending 'GET' request to URL : " + url);
				 System.out.println("Response Code : " + responseCode);
				 System.out.println("Response Len : " +
				 connection.getContentLength());
	             */
				
				
				
				BufferedReader  input = connection.getInputStream();
				byte[] buffer = new byte[4096];
				int n = - 1;

				OutputStream output = new FileOutputStream( file );
				while ( (n = input.read(buffer)) != -1)
				{
				    if (n > 0)
				    {
				        output.write(buffer, 0, n);
				    }
				}
				output.close();
				
				
				
				html = IOUtils.toString(connection.getInputStream(), "UTF-8");

			} catch (Exception ex) {
				Log.e("","ERROR IN GET REQUEST");
				

			} finally {

				if (connection != null) {
					connection.disconnect();
				}
			}

			return html;
		}

	
	
	

	// HTTP POST request
	public String sendPost(String url, String urlParameters, String host ) {
		HttpURLConnection connection = null;
		String html = "";
		try {
			URL obj = new URL(url);
			connection = (HttpURLConnection) obj.openConnection();

			// add reuqest header
			connection.setRequestMethod("POST");
			connection.setRequestProperty("User-Agent", USER_AGENT);
			connection.setRequestProperty("Accept-Language", "en-US,en;q=0.5");

			connection.setRequestProperty("Content-Type",
					"application/x-www-form-urlencoded");

			connection.setRequestProperty("Content-Length",
					"" + Integer.toString(urlParameters.getBytes().length));
			connection.setRequestProperty("Connection:keep", "keep-alive");
			connection.setRequestProperty("Cache-Control", "no-cache");

			connection.setRequestProperty("Pragma", "no-cache");
			connection.setRequestProperty("Referer", "http://"+host);
			connection.setRequestProperty("Origin", "http://"+host);
			connection.setRequestProperty("Host", host);

			//connection.setRequestProperty("Cookie", "WSID=123456789");

			// Send post request
			connection.setDoOutput(true);
			DataOutputStream wr = new DataOutputStream(
					connection.getOutputStream());
			wr.writeBytes(urlParameters);
			wr.flush();
			wr.close();

			// int responseCode = connection.getResponseCode();

			// System.out.println("\nSending 'POST' request to URL : " + url);
			// System.out.println("Post parameters : " + urlParameters);
			// System.out.println("Response Code : " + responseCode);

			html = IOUtils.toString(connection.getInputStream(), "UTF-8");

		} catch (Exception ex) {
			Log.e("","ERROR IN POST REQUEST");

		} finally {

			if (connection != null) {
				connection.disconnect();
			}
		}

		return html;

	}
	
	
	
	
	
	
	
	

}
